/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2022-03-04 01:09:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zh\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/admin/header.jsp", out, false);
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".fixed-table-container{position:relative;clear:both;border:1px solid #ddd;border-radius:4px;-webkit-border-radius:4px;-moz-border-radius:4px}\r\n");
      out.write("</style>\r\n");
      out.write("<body class=\"gray-bg\">\r\n");
      out.write("\t<div class=\"wrapper wrapper-content\">\r\n");
      out.write("\t    <div class=\"btn-group hidden-xs\" id=\"toolbar\" role=\"group\">\r\n");
      out.write("\t    \t<div class=\"form-group\">\r\n");
      out.write("\t            <a type=\"button\" class=\"btn btn-outline btn-default\" onclick=\"$.operate.add(0)\" shiro:hasPermission=\"system:menu:add\">\r\n");
      out.write("                    <i class=\"fa fa-plus\"></i> 新增\r\n");
      out.write("                </a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("\t    <table id=\"bootstrap-table\" data-mobile-responsive=\"true\"></table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/admin/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t<script >\r\n");
      out.write("\t\tvar addFlag = false;\r\n");
      out.write("\t\tvar editFlag = false;\r\n");
      out.write("\t\tvar removeFlag = false;\r\n");
      out.write("\t\tvar prefix = ctx + \"admin/menu\"\r\n");
      out.write("\r\n");
      out.write("\t\twindow.onload = function() {\r\n");
      out.write("\t\t\tloading();\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction loading() {\r\n");
      out.write("\t\t    var options = {\r\n");
      out.write("\t\t        id: \"menuId\",\r\n");
      out.write("\t\t        parentId: \"parentId\",\r\n");
      out.write("\t\t        expandAll: false,\r\n");
      out.write("\t\t        url: ctx+\"/MenuServlet?method=menuList\",\r\n");
      out.write("\t\t        createUrl: prefix + \"/add.jsp\",\r\n");
      out.write("\t\t        updateUrl: ctx+\"MenuServlet?method=to_menuUpdate\",\r\n");
      out.write("\t\t        removeUrl: prefix + \"/remove.jsp\",\r\n");
      out.write("\t\t        modalName: \"菜单\",\r\n");
      out.write("\t\t        columns: [{\r\n");
      out.write("\t\t            title: '菜单名称',\r\n");
      out.write("\t\t            field: 'menuName',\r\n");
      out.write("\t\t            width: '20%',\r\n");
      out.write("\t\t            formatter: function(row, index) {\r\n");
      out.write("\t\t                if (row.icon == null || row == \"\") {\r\n");
      out.write("\t\t                    return row.menuName;\r\n");
      out.write("\t\t                } else {\r\n");
      out.write("\t\t                    return '<i class=\"' + row.icon + '\"></i> <span class=\"nav-label\">' + row.menuName + '</span>';\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            field: 'orderNum',\r\n");
      out.write("\t\t            title: '排序',\r\n");
      out.write("\t\t            width: '10%',\r\n");
      out.write("\t\t            align: \"center\"\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            field: 'url',\r\n");
      out.write("\t\t            title: '请求地址',\r\n");
      out.write("\t\t            width: '15%',\r\n");
      out.write("\t\t            align: \"center\"\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            title: '类型',\r\n");
      out.write("\t\t            field: 'menuType',\r\n");
      out.write("\t\t            width: '10%',\r\n");
      out.write("\t\t            align: \"center\",\r\n");
      out.write("\t\t            formatter: function(item, index) {\r\n");
      out.write("\t\t                if (item.menuType == 'M') {\r\n");
      out.write("\t\t                    return '<span class=\"label label-success\">目录</span>';\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t                else if (item.menuType == 'C') {\r\n");
      out.write("\t\t                    return '<span class=\"label label-primary\">菜单</span>';\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t                else if (item.menuType == 'F') {\r\n");
      out.write("\t\t                    return '<span class=\"label label-warning\">按钮</span>';\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            field: 'visible',\r\n");
      out.write("\t\t            title: '可见',\r\n");
      out.write("\t\t            width: '10%',\r\n");
      out.write("\t\t            align: \"center\",\r\n");
      out.write("\t\t            formatter: function(row, index) {\r\n");
      out.write("\t\t                if (row.visible == 0) {\r\n");
      out.write("\t\t                    return '<span class=\"badge badge-primary\">显示</span>';\r\n");
      out.write("\t\t                } else if (row.visible == 1) {\r\n");
      out.write("\t\t                    return '<span class=\"badge badge-danger\">隐藏</span>';\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            field: 'perms',\r\n");
      out.write("\t\t            title: '权限标识',\r\n");
      out.write("\t\t            width: '15%',\r\n");
      out.write("\t\t            align: \"center\",\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            title: '操作',\r\n");
      out.write("\t\t            width: '20%',\r\n");
      out.write("\t\t            align: \"center\",\r\n");
      out.write("\t\t            formatter: function(row, index) {\r\n");
      out.write("\t\t                var actions = [];\r\n");
      out.write("\t\t                actions.push('<a class=\"btn btn-success btn-xs ' + editFlag + '\" href=\"javascript:voide(0)\" onclick=\"$.operate.edit(\\'' + row.menuId + '\\')\"><i class=\"fa fa-edit\"></i>编辑</a> ');\r\n");
      out.write("\t\t                actions.push('<a class=\"btn btn-info btn-xs ' + addFlag + '\" href=\"javascript:voide(0)\" onclick=\"$.operate.add(\\'' + row.menuId + '\\')\"><i class=\"fa fa-plus\"></i>新增</a> ');\r\n");
      out.write("\t\t                actions.push('<a class=\"btn btn-danger btn-xs ' + removeFlag + '\" href=\"javascript:voide(0)\" onclick=\"remove(\\'' + row.menuId + '\\')\"><i class=\"fa fa-remove\"></i>删除</a>');\r\n");
      out.write("\t\t                return actions.join('');\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        }]\r\n");
      out.write("\t\t    };\r\n");
      out.write("\t\t    $.treeTable.init(options);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction remove(id) {\r\n");
      out.write("\t\t\t$.modal.confirm(\"确定删除该条\" + $.table._option.modalName + \"信息吗？\", function() {\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\t\turl: ctx + \"/MenuServlet?method=menuRemove&id=\" + id,\r\n");
      out.write("\t\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\t\tif (result.code == web_status.SUCCESS) {\r\n");
      out.write("\t\t                \t$.modal.alertSuccess(result.msg);\r\n");
      out.write("\t\t                \tloading();\r\n");
      out.write("\t\t                } else {\r\n");
      out.write("\t\t                \t$.modal.alertError(result.msg);\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
